import imaplib
import email
from email.header import decode_header

#account Crendtials
username = "*********"
password = "**********"

 # create an IMAP4 class with SSL 
imap = imaplib.IMAP4_SSL("imap.gmail.com")
# authenticate
imap.login(username, password)
import logging
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
# select the mailbox I want to delete in
# if you want SPAM, use imap.select("SPAM") instead
imap.select("INBOX")

logging.debug('open the inbox')
# search for specific mails by sender
status, messages = imap.search(None, 'FROM "notification@seajin.chtah.com"')

logging.debug('imap.search - search the mail')

logging.debug(('status %s & message value %s') % (status,messages))

#imap.search return ok status and mailnum in message

# convert messages to a list of email IDs
# split all the message into list 

messages = messages[0].split(b' ')

logging.debug(('split  the message with proper prefix %s') % (messages))

for mail in messages:
   
    _, msg = imap.fetch(mail, "(RFC822)")
    #logging.debug(('fetch the mail %s') % msg)) 
    # you can delete the for loop for performance if you have a long list of emails
    # because it is only for printing the SUBJECT of target email to delete
    for response in msg:
        #logging.debug(('response from message %s') % (response))
        if isinstance(response, tuple):
            msg = email.message_from_bytes(response[1])
            #logging.debug(('msg from message %s') % (msg))
            # decode the email subject
            subject = decode_header(msg["Subject"])[0][0]
            logging.debug(('subject from message %s') % (subject))
            if isinstance(subject, bytes):
                # if it's a bytes type, decode to str
                subject = subject.decode()
            print("Moving the email with Folder", subject)
    # mark the mail as deleted
    imap.store(mail, '+X-GM-LABEL', '\\Deleted') #+X-GM-LABELS google parameter for IMCAP command and  move to Deleted
    #imap.store(mail, '+X-GM-LABELS', '\\Trash') #+X-GM-LABELS google parameter for IMCAP command and  move to Trash
    #imap.store(mail, '+X-GM-LABELS', 'Message2') # === +X-GM-LABELS google parameter for IMCAP command and move to specific folder
    # permanently remove mails that are marked as deleted
    # from the selected mailbox (in this case, INBOX) 
    print(imap.expunge())

print("Done. Closing connection & logging out.")
imap.close()
# logout
imap.logout()
